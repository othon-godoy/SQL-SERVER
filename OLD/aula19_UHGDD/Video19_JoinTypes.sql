-- EQÜIJOINS, OUTER JOINS AND SELF JOINS
----------------------------------------

USE CURSO_SQL2014_IMPL
GO

-- BEFORE YOU KNOW HOW TO WORK WITH MULTIPLE TABLES
-- YOU MUST UNDERSTAND HOW THEY ARE RELATED

-- SEE FIGURE1_DIAGRAM.JPG

-- TIP: IN THIS DIAGRAM THE RELATED COLUMNS HAVE THE SAME NAME
-- HOWEVER, THIS IS NOT MANDATORY

-- SO FAR WE ONLY SAW EQÜIJOINS: ALL THE ROWS THAT FILLS THE CRITERIA
-- EXAMPLE: PRODUTOS AND CATEGORIAS

SELECT PRO.NomeProduto
	  ,C.NomeCategoria
FROM PRODUTOS PRO INNER JOIN CATEGORIAS C
     ON PRO.IdCategoria = C.IdCategoria

-- NOTE: IF WE USE A TABLE ON THE FROM CLAUSE AND DON'T 
-- SPECIFY A RELATIONSHIP, WE GET A CARTESIAN PRODUCT (THE MULTIPLICATION OF ROWS)
-- AKA FULL JOIN
-- EXAMPLE: 

-- WE HAVE 54 PRODUCTS
SELECT * FROM PRODUTOS

-- WE HAVE 5 CATEGORIES
SELECT * FROM CATEGORIAS

-- IF WE JUST USE THE TABLES WE WILL HAVE 54x5 =  270 ROWS

SELECT *
FROM PRODUTOS P , CATEGORIAS C



-- THERE ARE OTHER TYPES OF JOINS. SEE FIGURE FIGURE2_JOINTYPES

-- AFTER EQÜIJOINS THE MOST COMMON TYPE OF JOINS ARE OUTER JOINS
-- THEY GET THE ROWS THAT FIT THE CRITERIA 
-- AND THE ROWS FROM ONE TABLE (LEFT OR RIGHT) THAT DO NOT FIT THE CRITERIA

-- THE ROWS FROM THE TABLE THAT DO NOT FILL THE CRITERIA RECEIVE NULL VALUES

-- YOU HAVE TO USE THE <LEFT OUTER JOIN> OR THE <RIGHT OUTER JOIN> CLAUSE
-- EXAMPLE: GET ALL THE CLIENTS THAT HAVE ORDERS

-- THIS SELECT GETS 299 ROWS
SELECT *
FROM CLIENTES C INNER JOIN PEDIDOS P
   ON C.IdCliente = P.IdCliente

-- HOWEVER, LET'S SUPOSSE WE WANT ALL THE CLIENTS: THE ONES THAT HAVE ORDERS
-- AND ALSO THE CLIENTS THAT DO NOT HAVE ORDERS 

-- USING THE CLIENTS TABLE ON THE LEFT WE CAN USE THE LEFT OUTER JOIN

-- NOW WE GOT 300 LINES
SELECT *
FROM CLIENTES C LEFT OUTER JOIN PEDIDOS P
   ON C.IdCliente = P.IdCliente

-- IF WE WANT ONLY THE CUSTOMER THAT DO NOT HAVE AN ORDER
-- WE CAN FILTER IT USING THE IS NULL OPERATOR IN THE WHERE CLAUSE:
SELECT *
FROM CLIENTES C LEFT OUTER JOIN PEDIDOS P
   ON C.IdCliente = P.IdCliente
WHERE P.IDCLIENTE IS NULL

-- NOTE: AVOID USE THE = NULL COMPARISON. USE THE IS NULL 
-- OR THE IS NOT NULL OPERATOR

-- THE RIGHT OUTER JOIN IS EQUIVALENT IF WE CHANGE 
-- THE ORDER OF THE TABLES ON THE FROM CLAUSE:

SELECT *
FROM  PEDIDOS P RIGHT OUTER JOIN CLIENTES C
   ON C.IdCliente = P.IdCliente
WHERE P.IDCLIENTE IS NULL

SELECT *
FROM  PEDIDOS P RIGHT OUTER JOIN CLIENTES C
   ON C.IdCliente = P.IdCliente

-- OUR DIAGRAM ALSO HAVE A SELF RELATIONSHIP ON THE VENDEDORES TABLE
-- TO GET THE SALESPERSON WITH THEIR SUPERIOR WE HAVE TO USE A SELF JOIN

-- SELF JOINS ARE SIMILAR TO EQÜIJOINS AND THE ONLY DIFFERENCE
-- IS THAT YOU USE THE SAME TABLE TWO OR MORE TIMES

-- YOU HAVE TO USE DIVERGENT ALIASES FOR THE SAME TABLE

SELECT V2.NomeVendedor AS 'VENDEDOR'
      ,V1.NomeVendedor AS  'GERENTE'
FROM VENDEDORES V1 INNER JOIN VENDEDORES V2
ON V1.IdVendedor = V2.IdGerenteVendas