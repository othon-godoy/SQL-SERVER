-- AGGREGATION
----------------------------------------

USE CURSO_SQL2014_IMPL
GO

-- MOST OF THE TIME THE TABLES WILL CONTAIN A LOT OF DATA
-- THEREFORE, WE NEED TO AGGREGATE I.E. SUMARIZE THE DATE

-- SQL SERVER HAS AGGREGATION FUNCIONS THAT COMPUTE MANY ROWS
-- AND RETURNS A SINGLE RESULT
-- EXAMPLE: USE COUNT() TO COUNT THE NUMBER OF ROWS


SELECT COUNT(IDPRODUTO) AS QTD
FROM PRODUTOS



-- YOU CAN USE THE * OR THE COLUMN NAME

SELECT COUNT(IDPEDIDO) AS QTD
FROM ITENS_PEDIDO

SELECT COUNT(*) AS QTD
FROM ITENS_PEDIDO

select * from ITENS_PEDIDO

-- ALSO, YOU CAN USE DISTINCT 
SELECT COUNT(DISTINCT IDPEDIDO) AS QTD
FROM ITENS_PEDIDO

-- THE MAIN AGG. FUNCTIONS ARE: COUNT(), MAX(), MIN(), SUM() AND AVG()
-- EXAMPLE:


SELECT COUNT(IDPRODUTO) AS 'QTD'
      ,MAX(PRCPRODUCTO) AS 'MAX PRICE'
	  ,MIN(PRCPRODUCTO) AS 'MIN PRICE'
	  ,SUM(PRCPRODUCTO) AS 'SUM OF THE PRICES'
	  ,AVG(PRCPRODUCTO) AS 'AVERAGE OF THE PRICES'
FROM PRODUTOS

-- AGG. FUNCTIONS USED LIKE THIS CONSIDER ALL THE ROWS
-- MOST OF THE TIME YOU WANT TO AGG. DATA FROM A SPECIFIC VALUE OF OTHER COLUMN
-- EXAMPLE: AVERAGE PRODUCT VALUE BY CATEGORY

-- TO SEPARATE THE AGG. VALUES AND GROUP THEN YOU HAVE THE GROUP BY CLAUSE

/*
SELECT <COLUMNS>
FROM <TABLES>
[WHERE <FILTER>]
[GROUP BY <COLUMNS>]
[ORDER BY <COLUMNS>]
*/

-- THE GROUP BY CLAUSE REQUIRE ALL THE COLUMN'S NAME EXCEPT THE AGGREGATED FUNCTION
-- YOU CAN JOIN, FILTER, ORDER AND DO ANYTHING ELSE IN THE SELECT 
-- EXAMPLES:

-- AMOUNT OF ITENS PER ORDER
SELECT IDPEDIDO
      ,COUNT(IDPRODUTO) AS 'NUMBER OF PRODUCTS' 
FROM ITENS_PEDIDO
GROUP BY IDPEDIDO
ORDER BY IDPEDIDO

select * from ITENS_PEDIDO

-- YOU CAN ORDER BY THE AGG. COLUMN
SELECT IDPEDIDO
      ,COUNT(IDPRODUTO) AS 'NUMBER OF PRODUCTS' 
FROM ITENS_PEDIDO
GROUP BY IDPEDIDO
ORDER BY COUNT(IDPRODUTO) DESC

-- YOU CAN USE WITH JOINS AND WITH MORE THAN ONE AGG. FUNCTIONS

SELECT C.NomeCategoria
      ,AVG(PRO.PRCPRODUCTO) AS 'AVG VALUE BY CATEGORY'
FROM PRODUTOS PRO INNER JOIN CATEGORIAS C
              ON PRO.IdCategoria = C.IdCategoria
GROUP BY C.NomeCategoria
ORDER BY C.NomeCategoria

-- NUMER OF DISTINC PRODUCTS AND TOTAL OF ITENS
-- BY ORDER
SELECT I.IdPedido
      ,COUNT(I.IDPRODUTO) AS 'NUMBER OF PRODUCTS' 
	  ,SUM(QTDPEDIDA)     AS 'TOTAL OF ITENS' 
FROM ITENS_PEDIDO I INNER JOIN PRODUTOS P
ON I.IdProduto = P.IdProduto
GROUP BY I.IdPedido
ORDER BY I.IdPedido

-- YOU CAN HAVE MORE THAN ONE COLUMN IN THE GROUP BY CLAUSE
-- THIS SEPARATES THE DATA INTO TIERS

SELECT I.IdPedido
      ,P.NomeProduto
	  ,COUNT(I.IDPRODUTO)				  AS 'NUMBER OF PRODUCTS' 
	  ,SUM(I.QTDPEDIDA)				      AS 'AMOUNT FOR THIS PRODUCT' 
FROM ITENS_PEDIDO I INNER JOIN PRODUTOS P
ON I.IdProduto = P.IdProduto
GROUP BY I.IdPedido, P.NomeProduto
ORDER BY I.IdPedido, P.NomeProduto

-- BE CAREFULL TO ALWAYS INSERT ALL THE NON AGGREGATED COLUMNS 
-- IN THE GROUP BY CLAUSE 

-- YOU CAN  USE THE WHERE CLAUSE TO FILTER THE NON AGG. COLUMNS:

SELECT I.IdPedido
      ,P.NomeProduto
	  ,COUNT(I.IDPRODUTO)				  AS 'NUMBER OF PRODUCTS' 
	  ,SUM(I.QTDPEDIDA)				      AS 'AMOUNT FOR THIS PRODUCT' 
FROM ITENS_PEDIDO I INNER JOIN PRODUTOS P
ON I.IdProduto = P.IdProduto
WHERE I.IdPedido IN (1,10)                -- ON THE ORDER NO. 1 AND 10
GROUP BY I.IdPedido, P.NomeProduto
ORDER BY I.IdPedido, P.NomeProduto

-- USE THE HAVING CLAUSE TO FILTER FOR THE AGG. VALUES

-- GET ONLY THE CUSTOMERS THAT HAVE MORE THAN 20 ORDERS
SELECT IDCLIENTE
      ,COUNT(IDPEDIDO) AS 'AMOUNT OF ORDERS' 
FROM PEDIDOS
GROUP BY IDCLIENTE
HAVING COUNT(IDPEDIDO) > 20
ORDER BY IDCLIENTE

-- LET'S GET A REPORT WITH THE TOTAL AMOUNT OF $$$ FOR EACH ORDER
-- SEPARETED BY ORDER

-- FIRST, THE ORDERS AND THE PRODUCTS

SELECT PE.IdPedido
	 , PRO.NomeProduto
	 , SUM(I.QtdPedida*PRO.PrcProducto) AS 'TOTAL $$$ FOR THIS PRODUCT'
FROM PEDIDOS PE INNER JOIN ITENS_PEDIDO I
				    ON PE.IdPedido = I.IdPedido
			    INNER JOIN PRODUTOS PRO
				    ON I.IdProduto = PRO.IdProduto
GROUP BY PE.IdPedido, PRO.NomeProduto
ORDER BY PE.IdPedido, PRO.NomeProduto


-- NOW ONLY THE ORDERS
SELECT PE.IdPedido
	 , SUM(I.QtdPedida*PRO.PrcProducto) AS 'TOTAL $$$ FOR THIS ORDER'
FROM PEDIDOS PE INNER JOIN ITENS_PEDIDO I
				    ON PE.IdPedido = I.IdPedido
			    INNER JOIN PRODUTOS PRO
				    ON I.IdProduto = PRO.IdProduto
GROUP BY PE.IdPedido
ORDER BY PE.IdPedido

SELECT PE.IdPedido
	 , SUM(I.QtdPedida*PRO.PrcProducto) AS 'TOTAL $$$ FOR THIS ORDER'
FROM PEDIDOS PE INNER JOIN ITENS_PEDIDO I
				    ON PE.IdPedido = I.IdPedido
			    INNER JOIN PRODUTOS PRO
				    ON I.IdProduto = PRO.IdProduto
GROUP BY PE.IdPedido
ORDER BY SUM(I.QtdPedida*PRO.PrcProducto) desc