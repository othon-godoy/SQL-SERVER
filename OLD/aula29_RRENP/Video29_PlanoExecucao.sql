-- THE EXECUTION PLAN
----------------------------------------

USE CURSO_SQL2014_IMPL
GO

-- SQL SERVER GENERATES MANY INTERNAL STEPS IN ORDER TO RUN A SQL QUERY
--THE FOUR MOST IMPORTANT ARE:
	--> PARSER
	--> GENERATION OF THE EXECUTION PLAN
	--> EXECUTION OF THE EXECUTION PLAN
	--> RETURN THE RESULT

-- THE EXECUTION OF THE EXECUTION PLAN IS WHAT GIVES THE EXECUTION TIME 
-- WHICH IS THE MOST IMPORTANT PERFORMANCE MESUREMENT

-- NOTE: YOU HAVE ESTIMATED AND ACTUAL EXECUTION PLANS

-- EVERY SQL HAVE AN EXECUTION PLAN, BUT MOST OF THE TIME WE ANALYSE 
-- THE SELECT STATMENTS' PLANS

-- YOU SHOULD NOT (ON MOST CASES) DIRECTLY CHANGE THE EXECUTION PLAN
-- MOST OF THE TIME YOU JUST MAKE 'EXTERNAL'  CHANGES TO MAKE IT BETTER, LIKE:
	--> CHANGES ON THE SQL STATEMENT
	--> CHANGE THE INDEXES
	--> ADD STATISTCS

-- NOTE: DO NOT TRY TO GET ALL THE RESULTS ON A HUDGE SELECT! 
-- MAYBE YOU SHOULD BREAK IT ON TWO OR MORE?

-- LET'S SEE SOME SQL STATEMENTS AND THEIR EXECUTION PLANS:

SELECT *
FROM CLIENTES

-- USE THE 'INCLUDE ACTION EXECUTION PLAN' AND CHECK THE NEW TAB
-- THAT HAS MANY INTERNAL OPERATORS AND INFORMATIONS ABOUT THE PLAN

-- YOU CAN ALSO USE THE CTRL+L SHORTCUT TO SEE THE ESTIMATED EXECUTION PLAN
-- WITHOUT EXECUTING THE QUERY

-- LET'S SEE SOME COMPLEX QUERIES AND THE EXECUTION PLANS

SELECT *
FROM CLIENTES
WHERE  'Editora Científica' = NomeCliente


SELECT *
FROM PRODUTOS
WHERE PrcProducto IN(16.0,18.0,20.0)


SELECT *
FROM CLIENTES
WHERE NomeCliente LIKE '%a'


SELECT NomeCliente
FROM CLIENTES
WHERE NomeCliente LIKE '%a'


SELECT NomeCliente
      ,EndCliente as Endereco
FROM CLIENTES
ORDER BY Endereco


SELECT PRO.NomeProduto
	  ,C.NomeCategoria
FROM PRODUTOS PRO INNER JOIN CATEGORIAS C
     ON PRO.IdCategoria = C.IdCategoria



SELECT V2.NomeVendedor AS 'VENDEDOR'
      ,V1.NomeVendedor AS  'GERENTE'
FROM VENDEDORES V1 INNER JOIN VENDEDORES V2
ON V1.IdVendedor = V2.IdGerenteVendas

SELECT IDPEDIDO
      ,COUNT(IDPRODUTO) AS 'NUMBER OF PRODUCTS' 
FROM ITENS_PEDIDO
GROUP BY IDPEDIDO
ORDER BY IDPEDIDO



SELECT C.NomeCategoria
      ,AVG(PRO.PRCPRODUCTO) AS 'AVG VALUE BY CATEGORY'
FROM PRODUTOS PRO INNER JOIN CATEGORIAS C
              ON PRO.IdCategoria = C.IdCategoria
GROUP BY C.NomeCategoria
ORDER BY C.NomeCategoria


SELECT I.IdPedido
      ,P.NomeProduto
	  ,COUNT(I.IDPRODUTO)				  AS 'NUMBER OF PRODUCTS' 
	  ,SUM(I.QTDPEDIDA)				      AS 'AMOUNT FOR THIS PRODUCT' 
FROM ITENS_PEDIDO I INNER JOIN PRODUTOS P
ON I.IdProduto = P.IdProduto
WHERE I.IdPedido IN (1,10)                -- ON THE ORDER NO. 1 AND 10
GROUP BY I.IdPedido, P.NomeProduto
ORDER BY I.IdPedido, P.NomeProduto

SELECT PE.IdPedido
	 , SUM(I.QtdPedida*PRO.PrcProducto) AS 'TOTAL $$$ FOR THIS ORDER'
FROM PEDIDOS PE INNER JOIN ITENS_PEDIDO I
				    ON PE.IdPedido = I.IdPedido
			    INNER JOIN PRODUTOS PRO
				    ON I.IdProduto = PRO.IdProduto
GROUP BY PE.IdPedido
ORDER BY SUM(I.QtdPedida*PRO.PrcProducto) desc
