-- SUBQUERIES
----------------------------------------

USE CURSO_SQL2014_IMPL
GO

--  SUBQUERIES ARE A SELECT INSIDE A SELECT
-- THEY CAN BREAK A COMPLEX QUERY INTO TWO QUERIES 
-- THAT WILL WORK TOGETHER

-- YOU CAN USE A SUBQUERY IN MANY PLACES INSIDE A SELECT:
--	-> ON THE FIELDS LIST
--  -> ON THE FROM CLAUSE
--  -> ON THE WHERE CLAUSE

-- NEVER FORGHET THE PARENTHESIS ENCLOSING THE SUBQUERY!

-- LET'S SEE THE SUBQUERIES THAT RETURN ONLY ONE ROW
-- SIMPLE EXAMPLE:

SELECT C1
      , (SELECT C2 FROM T2)  AS C2
	  ,C3
FROM T1

SELECT * FROM PRODUTOS

-- WHICH PRODUCTS HAVE THE MAXIMUM PRODUCT PRICE?
SELECT IDPRODUTO
      ,PRCPRODUCTO
FROM PRODUTOS
WHERE PRCPRODUCTO = (SELECT MAX(PRCPRODUCTO) FROM PRODUTOS)

-- ORDERS WITH AMOUNT OF ITENS EQUALS TO THE AVERAGE AMOUNG OF ITENS
SELECT IDPEDIDO AS 'Pedido'
      ,QtdItensPedido as 'Qtd'
FROM PEDIDOS
WHERE DataPedido BETWEEN '2014-07-01' AND '2014-07-30'
AND QtdItensPedido >= (SELECT AVG(QTDITENSPEDIDO)
                       FROM PEDIDOS   
					   WHERE DataPedido BETWEEN '2014-07-01' AND '2014-07-30')

-- NOTE: TRY TO ORGANIZE BETTER YOUR SELECT STATEMENT AND SUBQUERIES!

-- SUBQUERIES CAN RETURN MORE THAN ONE ROW
-- YOU NEED TO USE SPECIAL FUNCTIONS LIKE IN() OR EXISTS()

SELECT IdPedido
      ,idCliente
	  ,QtdItensPedido
FROM PEDIDOS
WHERE QtdItensPedido > 90
AND   IdCliente IN (SELECT IdCliente
                    FROM CLIENTES
					WHERE NomeCliente LIKE 'Empresa%')

-- NOTE: TRY TO USE A JOIN INSTEAD OF A SUBQUERY
-- EXAMPLE: THE FOLLOWING QUERIES HAVE THE SAME RESULT

SELECT * 
FROM T1
WHERE ID IN (SELECT ID FROM T2)

SELECT T1.*
FROM T1, T2
WHERE T1.ID = T2.ID

SELECT T1.*
FROM T1 INNER JOIN T2
     ON T1.ID = T2.ID

-- YOU CAN CREATE AN ALIAS FROM A SUBQUERY AND USE IT LIKE A TABLE


-- GET ALL THE COMPANIES THAT TRANSPORT ORDER WITH 5 OR LESS ITENS
SELECT DISTINCT A.idTransportadora, 
				C.NomeTransportadora 'Trasportadora'
FROM PEDIDOS AS A,
     (SELECT IDPEDIDO FROM ITENS_PEDIDO WHERE QtdPedida <=5) AS B,
	 TRANSPORTADORAS C
WHERE A.IdPedido = B.IdPedido
AND A.idTransportadora = C.IdTransportadora
ORDER BY A.idTransportadora

-- YOU CAN USE DATA FROM THE OUTERMOST QUERY INSIDE THE SUBQUERY
-- I.E. WE CAN CORRELATE THE TWO QUERIES
-- TO DO SO, USE ALIASES
-- FOR EVERY ROW OF THE OUTERMOST QUERY THE INNERMOST QUERY MUST BE EXECUTED

-- EXAMPLE: GET ALL THE CUSTOMERS THAT DON'T HAVE ANY ORDERS

SELECT A.IdCliente
      ,A.NomeCliente
FROM CLIENTES A
WHERE NOT EXISTS(SELECT B.IdCliente
				FROM PEDIDOS B
				WHERE A.IDCLIENTE = B.IdCliente)
