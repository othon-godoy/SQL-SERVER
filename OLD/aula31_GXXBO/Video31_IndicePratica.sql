-- WORKING WITH INDEXES
----------------------------------------

USE CURSO_SQL2014_IMPL
GO

-- REVIEW: CLUSTERED AND NONCLUSTERED INDEXES

-- CLUSTERED: JUST ONE FOR TABLE. IT ORDERS THE PAGES PHYSICALLY
-- NONCLUSTERED: MORE THAN ONE FOR EACH TABLE. IT IS BASED ON THE CLUSTERED INDEX

-- NOTE: TABLES WITHOUT AN INDEX USES THE HEAP

-- INDEXES HAVE NAMES JUST LIKE ANY OTHER OBJECT
-- SQL SERVER ASSOCIATED A PRIMARY KEY WITH AN INDEX

-- YOU CAN ALSO CREATE/ALTER/DROP INDEXES WITH COMMANDS
-- WHEN YOU REMOVE THE TABLE YOU ALSO REMOVE ITS INDEXES

-- NOTE: CHOSSE WISELY THE COLUMNS (THE INDEX KEY)
-- NOTE: INDEXES ALSO REQUIRE MAINTENANCE (REORDER, REINDEX, ETC)

-- KEEP IN MIND THE SIZE AND THE TIME TO INSERT/UPDATE/DELETE


-- CLUSTERED INDEX
------------------
-- THE CLUSTERED INDEXES ARE USED IN PKS
-- NOTE: A CLUSTERED INDEX BY ITESELFT DO NOT GARANTEE INIQUE VALUES!
-- TO FORCE UNIQUE VALUES, USE A PK OR THE UNIQUE KEYWORD!

CREATE TABLE TB_PK_INDEX
(
	COL1 VARCHAR(10) NOT NULL PRIMARY KEY,
	COL2 DATETIME
)
GO

SP_HELPINDEX TB_PK_INDEX
SP_HELP TB_PK_INDEX

SELECT *
FROM SYS.indexes
WHERE object_id = OBJECT_ID('TB_PK_INDEX')

SELECT *
FROM SYS.index_columns
WHERE object_id = OBJECT_ID('TB_PK_INDEX')

INSERT TB_PK_INDEX VALUES('A',GETDATE())


CREATE TABLE TB_CLUSTERED_INDEX
(
	ID INT,
	NAME VARCHAR(10)
)
GO

CREATE CLUSTERED INDEX IX_ID_CLUSTERED
ON TB_CLUSTERED_INDEX(ID)
GO

SP_HELPINDEX TB_CLUSTERED_INDEX
SP_HELP TB_CLUSTERED_INDEX

SELECT *
FROM SYS.indexes
WHERE object_id = OBJECT_ID('TB_CLUSTERED_INDEX')

SELECT *
FROM SYS.index_columns
WHERE object_id = OBJECT_ID('TB_CLUSTERED_INDEX')

INSERT TB_CLUSTERED_INDEX VALUES(1,'A')
INSERT TB_CLUSTERED_INDEX VALUES(2,'B')
INSERT TB_CLUSTERED_INDEX VALUES(3,'C')
INSERT TB_CLUSTERED_INDEX VALUES(4,'D')
INSERT TB_CLUSTERED_INDEX VALUES(5,'E')

SELECT * FROM TB_CLUSTERED_INDEX

INSERT TB_CLUSTERED_INDEX VALUES(1,'F')

-- CHECK THE EXECUTION PLAN
SELECT * FROM TB_CLUSTERED_INDEX

-- NOW DROP THE INDEX

DROP INDEX TB_CLUSTERED_INDEX.IX_ID_CLUSTERED


-- NONCLUSTERED INDEX
------------------
-- THE NONCLUSTERED INDEX CREATION IS SIMILAR: USE THE NONCLUSTERED KEYWORD


-- EXAMPLE:
CREATE TABLE TB_NONCLUSTERED_INDEX
(
	ID INT,
	NAME VARCHAR(10)
)
GO

CREATE NONCLUSTERED INDEX IX_ID_NONCLUSTERED
ON TB_NONCLUSTERED_INDEX(ID)
GO

SP_HELPINDEX TB_NONCLUSTERED_INDEX
SP_HELP TB_NONCLUSTERED_INDEX

SELECT *
FROM SYS.indexes
WHERE object_id = OBJECT_ID('TB_NONCLUSTERED_INDEX')

SELECT *
FROM SYS.index_columns
WHERE object_id = OBJECT_ID('TB_NONCLUSTERED_INDEX')

INSERT TB_NONCLUSTERED_INDEX VALUES(1,'A')
INSERT TB_NONCLUSTERED_INDEX VALUES(2,'B')
INSERT TB_NONCLUSTERED_INDEX VALUES(3,'C')
INSERT TB_NONCLUSTERED_INDEX VALUES(4,'D')
INSERT TB_NONCLUSTERED_INDEX VALUES(5,'E')

SELECT * FROM TB_NONCLUSTERED_INDEX

INSERT TB_NONCLUSTERED_INDEX VALUES(1,'F')

-- CHECK THE EXECUTION PLAN
SELECT * FROM TB_NONCLUSTERED_INDEX

DELETE TB_NONCLUSTERED_INDEX WHERE ID = 1

-- NOW DROP THE INDEX

DROP INDEX TB_NONCLUSTERED_INDEX.IX_ID_NONCLUSTERED

-- TRY TO CREATE THE UNIQUE NONCLUSTERE INDEX
CREATE UNIQUE NONCLUSTERED INDEX IX_ID_NONCLUSTERED_UNIQUE
ON TB_NONCLUSTERED_INDEX(ID)
GO

-- REMOVE THE DATA
TRUNCATE TABLE TB_NONCLUSTERED_INDEX

-- TRY CREATING THE INDEX AGAIN
CREATE UNIQUE NONCLUSTERED INDEX IX_ID_NONCLUSTERED_UNIQUE
ON TB_NONCLUSTERED_INDEX(ID)
GO

SP_HELPINDEX TB_NONCLUSTERED_INDEX

-- TRY TO INSERT DUPLICATED DATA

INSERT TB_NONCLUSTERED_INDEX VALUES(1,'A')
INSERT TB_NONCLUSTERED_INDEX VALUES(1,'A')

SELECT * FROM TB_NONCLUSTERED_INDEX

-- REMOVE THE INDEX

DROP INDEX TB_NONCLUSTERED_INDEX.IX_ID_NONCLUSTERED_UNIQUE

-- CREATE THE COMPOSITE INDEX (MORE THAN ONE KEY)

CREATE NONCLUSTERED INDEX IX_COMPOSITE
ON TB_NONCLUSTERED_INDEX(ID,NAME)
GO
