-- PRIMARY KEY, DEFAULT AND NULL
----------------------------------------

USE CURSO_SQL2014_IMPL
GO

-- COLUMNS ON A TABLE CAN OR CANNOT HAVE NULL VALUES
-- YOU SPECIFY THIS ON THE TABLE'S CREATION USING THE 'NULL' OR 'NOT NULL' VALUES
-- NULABILITY IS A CONSTRAINT AND IT CAN BE USED WITH ANY DATATYPE
-- NOTE: NULL MEANS THAT THERE IS NO VALUE AND ITS NOT EQUAL '' OR 0
-- NOTE: BE CAREFULL WHEN COMPARING NULL VALUES (USE THE 'IS NULL' OR 'IS NOT NULL' OPERATORS)
-- NOTE: ALWAYS USE NOT OR NOT NULL. AVOID TRUST THE DEFAULT VALUE
-- EXAMPLES:

CREATE TABLE TB_NULL
(
	INT_COLUMN_NOT_NULL INT NOT NULL,
	INT_COLUMN_NULL     INT NULL,

	VARCHAR_COLUMN_NOT_NULL VARCHAR(1) NOT NULL,
	VARCHAR_COLUMN_NULL     VARCHAR(1) NULL,

	BIT_COLUMN_NOT_NULL BIT NOT NULL,
	BIT_COLUMN_NULL     BIT NULL
)
GO

-- CHECK THE NULABILITY
SP_HELP TB_NULL


INSERT TB_NULL VALUES(100,NULL,'A',NULL,1,NULL)   
INSERT TB_NULL VALUES(NULL,99,'A',NULL,1,NULL)    

SELECT * FROM TB_NULL

INSERT TB_NULL VALUES(1000,1000,'A','B',1,0)      

-- DEFAULT

-- COLUMNS MAY HAVE DEFAULT VALUES
-- THIS IS USED TO FULFILL CERTAIN COLUMNS THAT HAVE ALMOST THE SAME VALUE FOR ALL ROWS
-- YOU HAVE TO USE THE 'DEFAULT' KEYWORD AND A DATATYPE COMPATIBLE VALUES
-- MAKE SURE YOU DON'T PROVIDE THE COLUMN'S NAME ON THE INSERT STATEMENT
-- EXAMPLE:

CREATE TABLE TB_DEFAULT
(
	ID INT,
	NAME VARCHAR(100) DEFAULT 'UNKNOWN',
	THE_DATE DATETIME DEFAULT GETDATE()
)
GO

-- CHECK DE DEFAULTS
SP_HELP TB_DEFAULT

INSERT TB_DEFAULT VALUES(1,'ABC','2014-01-01')     
INSERT TB_DEFAULT VALUES(2,DEFAULT,DEFAULT)        

SELECT * FROM TB_DEFAULT

INSERT TB_DEFAULT(ID) VALUES(3)       
SELECT * FROM TB_DEFAULT


-- PRIMARY KEY

-- THE PRIMARY KEY IS THE MOST IMPORTANT CONSTRAINT IN SQL SERVER
-- IT SHOULD BE CREATED AFTER THE MODELING PHASE

-- IT HAS THE FOLLOWING CHARACTERISTICS:
--	-> CAN BE SIMPLE (ONE COLUMN) OR COMPOSITE (MULTIPLE COLUMNS)
--  -> DUPLICATED VALUES ARE NOT ALLOWED
--  -> COLUMN(S) CANNOT ALLOW NULL VALUES
--  -> AN INDEX IS CREATED WITH THE PK (USUALLY A CLUSTERED INDEX)
--  -> HAS TO HAVE A NAME (AUTO GENERATED OR USER SUPLIED)

-- CHECK THE MODEL (Figura1_Modelo.jpg) TO SEE THE PKs
-- TO SEE SOME PRIMARY KEYS USE THE SP_HELP:

SP_HELP CLIENTES


-- USE THE CREATE TABLE COMMAND WITH THE 'PRIMARY KEY' CLAUSE ON THE COLUMN

CREATE TABLE T_PRIMARYKEY
(
	ID TINYINT NOT NULL PRIMARY KEY,
    NAME VARCHAR(100)
)
GO
-- CHECK THE PK NAME

SP_HELP T_PRIMARYKEY


-- TRY TO INSERT DUPLICATED VALUES

INSERT T_PRIMARYKEY VALUES(1,'A')
INSERT T_PRIMARYKEY VALUES(1,'A')

INSERT T_PRIMARYKEY VALUES(NULL,'A')

select * from T_PRIMARYKEY 

-- YOU CAN CREATE THE PRIMARY KEY AFTER THE CREATE TABLE AND PROVIDE A NAME


CREATE TABLE T_LATE_PRIMARYKEY
(
	C1  VARCHAR(10) NOT NULL,
	C2  DATETIME
)
GO

ALTER TABLE T_LATE_PRIMARYKEY
ADD  CONSTRAINT PK_MY_KEY PRIMARY KEY(C1)

-- NOTE: YOU CAN ALSO USE 'ALTER TABLE <name> ALTER CONSTRAINT...
-- NOTE: YOU CAN ALSO USE 'ALTER TABLE <name> DROP CONSTRAINT...

SP_HELP T_LATE_PRIMARYKEY

INSERT T_LATE_PRIMARYKEY VALUES('A',GETDATE())
INSERT T_LATE_PRIMARYKEY VALUES('B',GETDATE())

INSERT T_LATE_PRIMARYKEY VALUES('A',GETDATE())

-- LET'S SEE AND EXAMPLE OF A COMPOSITE PRIMARY KEY
-- IN THIS CASE THE COMBINATION OF VALUES CANNOT BE REPETED

CREATE TABLE T_COMPOSITE_PRIMARYKEY
(
	ID_FIRST  INT NOT NULL,
	ID_SECOND  INT NOT NULL,
	THE_DATE DATETIME,
	THE_NAME VARCHAR(10)
)
GO

ALTER TABLE T_COMPOSITE_PRIMARYKEY
ADD  CONSTRAINT PK_COMPOSITE_KEY PRIMARY KEY(ID_FIRST,ID_SECOND)

SP_HELP T_COMPOSITE_PRIMARYKEY

INSERT T_COMPOSITE_PRIMARYKEY VALUES(0,0,GETDATE(),'A') 
INSERT T_COMPOSITE_PRIMARYKEY VALUES(0,1,GETDATE(),'B') 
INSERT T_COMPOSITE_PRIMARYKEY VALUES(1,0,GETDATE(),'C') 
INSERT T_COMPOSITE_PRIMARYKEY VALUES(1,1,GETDATE(),'D') 

SELECT * FROM T_COMPOSITE_PRIMARYKEY 

INSERT T_COMPOSITE_PRIMARYKEY VALUES(0,0,GETDATE(),'E') 

