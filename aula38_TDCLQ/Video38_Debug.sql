-- DEBUGGING T-SQL CODE
-----------------------------------------

USE CURSO_SQL2014_IMPL
GO

-- THE T-SQL LANGUAGE IS VERY POWERFULL
-- AND LIKE ANY OTHER LANGUAGEM, YOU CAN DEBUG IT

-- MOST OF THE TIME YOU JUST DEBUG USING SELECT 
-- STATEMENT TO VERIFY IF YOUR CODE EXECUTED OR NOT

-- THE MANAGEMENT STUDIO 2014 HAS AN INTEGRATED DEBUG
-- WITH BREAKPOINTS, LOCAL VARIABLES, AND COMMON DEBUG FEATURES
-- NOTE: IT IS USED TO DEBUG CODE, NOT STANDALONE SQL STATEMENTS

-- IF YOU HAVE THE SOURCE CODE OF A CLR FUNCTION, YOU CAN DEBUG IT TOO

-- LET'S SEE AN EXEMPLE:

CREATE PROCEDURE ST_HELLOWORLD
AS
BEGIN
	SELECT 'HELLO WORLD!' 
END

EXEC ST_HELLOWORLD

-- A MORE COMPLEX EXAMPLE WITH A COUNTER
-- AND A PARAMENTER

CREATE PROCEDURE ST_COUNTER @MAX INT
AS
BEGIN
	DECLARE @I INT
	
	SET @I = 0

	WHILE (@I < @MAX)
	BEGIN
		SELECT @I
		SET @I = @I + 1
	END

	SELECT 'FINISHED COUNTING!' 
END
GO

EXEC ST_COUNTER 10

-- LET'S SEE THE CALL STACK

CREATE PROCEDURE ST_PROC_A
AS
BEGIN
	DECLARE @VAR1 INT

	SET @VAR1 = 10

	EXEC ST_PROC_B

	SELECT 'FINISHED!' 

END
GO

CREATE PROCEDURE ST_PROC_B
AS
BEGIN

	-- THIS LINE FAILS: NO @VAR1 INSIDE ST_PROC_B!
	-- USE PARAMETERS TO PASS VALUES
	-- SELECT @VAR1

	SELECT GETDATE()
END
GO

EXEC ST_PROC_A

-- A FUNCTION EXAMPLE

CREATE FUNCTION F_ALLTRIM(@S VARCHAR(100))
RETURNS VARCHAR(100)
BEGIN
	RETURN LTRIM(RTRIM(@S))
END

--
SELECT dbo.F_ALLTRIM(' A B ')
      ,len(dbo.F_ALLTRIM(' A B '))

SELECT dbo.F_ALLTRIM(NomeCliente)
FROM CLIENTES