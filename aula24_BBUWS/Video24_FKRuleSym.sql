-- FOREIGN KEY, CHECK CONSTRAINTS AND SYNONYMS
----------------------------------------

USE CURSO_SQL2014_IMPL
GO

-- SYNONYMS

-- SYNONYMS ARE JUST LIKE ALIASES ON A SELECT: THEY CREATE A NEW ALIAS FOR THE OBJECT
-- THEY ARE USED TO SIMPLIFY LONG NAMES AND IT'S SCHEMA
-- UNLIKE VIEWS, THEY CAN ENCAPSULATE ANY OBJECT NAME
-- USE: CREATE/ALTER/DROP SYNONYM
-- EXAMPLE:

CREATE SYNONYM ITENS
FOR ITENS_PEDIDO

SELECT *
FROM ITENS

SELECT * 
FROM SYS.dm_os_buffer_pool_extension_configuration


CREATE SYNONYM BPE_CONF
FOR SYS.dm_os_buffer_pool_extension_configuration

SELECT * FROM BPE_CONF

-- CHECK CONSTRAINTS

-- CHECK CONSTRAINTS ARE EXPRESSIONS THAT CAN BE USED TO VALIDADE A COLUMN'S VALUE
-- IT IS CHEKED DURING THE INSERTION OR ALTERATION OF THE VALUE
-- USE TO IMPLEMENT SIMPLE BUSSINESS LOGIC
-- EXAMPLES:


CREATE TABLE TB_CHECK
(
	ID INT NOT NULL,
	THE_DATE DATETIME NOT NULL CHECK ( DATEDIFF(D,GETDATE(),THE_DATE) > 2 )
)
GO

INSERT TB_CHECK VALUES(1,GETDATE())
INSERT TB_CHECK VALUES(1,GETDATE()-1)
INSERT TB_CHECK VALUES(1,GETDATE()+3)
INSERT TB_CHECK VALUES(1,GETDATE()-3)

SELECT * FROM TB_CHECK

SP_HELP TB_CHECK

-- FOREIGN KEYS

-- FOREIGN KEYS ARE THE SECOND MOST IMPORTANT CONSTRAINT
-- THEY ARE CREATED FROM THE MODEL (CHECK Figura1_Modelo.JPG)
-- THEY RELATIONSHIP IS ALSO CALLED PARENT (THE PK) CHILD (THE FK)
-- NOTE: YOU CAN'T REMOVE PARENT ROWS WITHOUT REMOVING THE CHILDREN FIRST*!

-- THEY LIMIT THE VALUES OF COLUMNS BASED ON THE COLUMNS OF ANOTHER TABLE 
-- FK COLUMNS MAY RECEIVE NULL VALUES (CHECK THE NULABILITY)

-- THEY CAN BE SIMPLE (ONE COLUMNS) OR COMPOSITE (MORE THAN ONE COLUMN)
-- MOST OF THE TIME A TABLE WITH A FK WILL REFERENCE A COLUMNS THAT HAS A PK

-- *THERE CAN BE CASCADE OPTIONS WHEN CHANGING VALUES OF COLUMNS THAT HAVE A FK
-- NOTE: THERE IS NO AUTOMATIC INDEX ON FK COLUMNS

-- EXAMPLE:

-- CREATES THE PARENT TABLE 
CREATE TABLE PARENT
(
  PARENT_ID  SMALLINT        NOT NULL PRIMARY KEY,
  PARENT_NAME CHAR(10)        NOT NULL,
  BIRTH_DATE  SMALLDATETIME   NOT NULL
)

-- CREATES THE CHILD TABLE
CREATE TABLE CHILD
( 
  CHILD_ID   SMALLINT        NOT NULL PRIMARY KEY,
  PARENT_ID  SMALLINT        NOT NULL ,
  CHILD_NAME CHAR(10)        NOT NULL,
  BIRTH_DATE SMALLDATETIME   NOT NULL,
  CHILD_SEX  CHAR(01)        NOT NULL
)

-- NOW CREATES THE FOREIGN KEY 

ALTER TABLE CHILD
ADD CONSTRAINT FK_CHILD FOREIGN KEY (PARENT_ID) REFERENCES PARENT(PARENT_ID)

SP_HELP PARENT
SP_HELP CHILD

-- INSERT SOME PARENT DATA
INSERT PARENT VALUES(1,'JOAO','01/05/65')
INSERT PARENT VALUES(2,'JOSE','01/05/65')
INSERT PARENT VALUES(3,'JOAQUIM','01/05/65')
INSERT PARENT VALUES(4,'JAIRO','01/05/65')

SELECT * FROM PARENT

/* ********************** */

-- INSERT SOME CHILD DATA
INSERT CHILD VALUES (1,1,'ROSA','01/25/85','F')
INSERT CHILD VALUES (2,1,'RAQUEL','02/25/85','F')
INSERT CHILD VALUES (3,1,'RICARDO','03/25/85','M')

INSERT CHILD VALUES (4,2,'MARCOS','01/25/85','M')
INSERT CHILD VALUES (5,2,'MARIA','01/25/85','F')

INSERT CHILD VALUES (6,6,'ROSA','01/25/85','F')
INSERT CHILD VALUES (7,7,'ROSANA','01/25/85','F')


-- CHECK THE DATA
SELECT * FROM PARENT
SELECT * FROM CHILD

/* ************************************ */

/* INNER JOIN */

SELECT PARENT.PARENT_ID,
	   PARENT.PARENT_NAME,
       CHILD.CHILD_ID,
       CHILD.CHILD_NAME
FROM PARENT INNER JOIN CHILD
ON PARENT.PARENT_ID = CHILD.PARENT_ID

/* ******************** */
/* LEFT OUTER JOIN */

SELECT PARENT.PARENT_ID,
	   PARENT.PARENT_NAME,
       CHILD.CHILD_ID,
       CHILD.CHILD_NAME
FROM PARENT LEFT JOIN CHILD
ON PARENT.PARENT_ID = CHILD.PARENT_ID


/* ******************** */

/* RIGHT OUTER JOIN */


SELECT PARENT.PARENT_ID,
	   PARENT.PARENT_NAME,
       CHILD.CHILD_ID,
       CHILD.CHILD_NAME
FROM PARENT RIGHT JOIN CHILD
ON PARENT.PARENT_ID = CHILD.PARENT_ID

/* ******************** */

/* FULL OUTER JOIN */

SELECT PARENT.PARENT_ID,
	   PARENT.PARENT_NAME,
       CHILD.CHILD_ID,
       CHILD.CHILD_NAME
FROM PARENT FULL OUTER JOIN CHILD
ON PARENT.PARENT_ID = CHILD.PARENT_ID